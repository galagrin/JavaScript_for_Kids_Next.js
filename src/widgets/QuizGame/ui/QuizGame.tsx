'use client';

import { useEffect } from 'react';

import { useQuizStore } from '@/entities/quiz';

import { getCategoryName } from '../model/getCategoryName';

import styles from './QuizGame.module.scss';

export const QuizGame = () => {
    const {
        currentQuestion,
        score,
        totalQuestions,
        gameStarted,
        gameEnded,
        answered,
        selectedAnswer,
        showResult,
        loading,
        error,
        startGame,
        selectAnswer,
        nextQuestion,
        resetGame,
        loadAllMethods,
    } = useQuizStore();

    useEffect(() => {
        loadAllMethods();
    }, [loadAllMethods]);

    if (loading) {
        return (
            <div className={styles.container}>
                <div className={styles.loading}>
                    <div className={styles.spinner}></div>
                    <p>–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã...</p>
                </div>
            </div>
        );
    }

    if (error) {
        return (
            <div className={styles.container}>
                <div className={styles.error}>
                    <h2>–û—à–∏–±–∫–∞</h2>
                    <p>{error}</p>
                    <button onClick={() => loadAllMethods()} className={styles.retryButton}>
                        –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                    </button>
                </div>
            </div>
        );
    }

    if (!gameStarted) {
        return (
            <div className={styles.container}>
                <div className={styles.welcome}>
                    <h1>JavaScript –í–∏–∫—Ç–æ—Ä–∏–Ω–∞</h1>
                    <p>–ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è JavaScript –º–µ—Ç–æ–¥–æ–≤!</p>
                    <div className={styles.rules}>
                        <h3>–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:</h3>
                        <ul>
                            <li>–í–æ–ø—Ä–æ—Å—ã –≤—ã–±–∏—Ä–∞—é—Ç—Å—è —Å–ª—É—á–∞–π–Ω–æ</li>
                            <li>–£ —Ç–µ–±—è –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –ø–æ–ø—ã—Ç–∫–∞ –Ω–∞ –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å</li>
                            <li>–í—ã–±–µ—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –ø–æ –µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—é</li>
                            <li>–ù–∞–±–∏—Ä–∞–π –æ—á–∫–∏ –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã!</li>
                        </ul>
                    </div>
                    <button onClick={startGame} className={styles.startButton}>
                        –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
                    </button>
                </div>
            </div>
        );
    }

    // –§–∏–Ω–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    if (gameEnded && !showResult) {
        return (
            <div className={styles.container}>
                <div className={styles.welcome}>
                    <h1>–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞</h1>
                    <p>
                        –¢–≤–æ–π —Å—á—ë—Ç: {score} –∏–∑ {totalQuestions}
                    </p>
                    <div style={{ display: 'flex', gap: 12, marginTop: 12 }}>
                        <button onClick={startGame} className={styles.startButton}>
                            –ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞
                        </button>
                        <button onClick={resetGame} className={styles.resetButton}>
                            –í –º–µ–Ω—é
                        </button>
                    </div>
                </div>
            </div>
        );
    }

    if (!currentQuestion) {
        return (
            <div className={styles.container}>
                <div className={styles.loading}>
                    <p>–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤–æ–ø—Ä–æ—Å...</p>
                </div>
            </div>
        );
    }

    return (
        <div className={styles.container}>
            <div className={styles.questionCard}>
                <div className={styles.questionHeader}>
                    <span className={styles.questionNumber}>–í–æ–ø—Ä–æ—Å {totalQuestions + 1}</span>
                    <span className={styles.category}>{getCategoryName(currentQuestion.category)}</span>
                </div>

                <div className={styles.questionContent}>
                    <h2>–ö–∞–∫–æ–π –º–µ—Ç–æ–¥ –¥–µ–ª–∞–µ—Ç —ç—Ç–æ?</h2>
                    <p className={styles.description}>{currentQuestion.description}</p>
                </div>

                <div className={styles.options}>
                    {currentQuestion.options.map((option, index) => {
                        let optionClass = styles.option;

                        if (answered) {
                            if (option === currentQuestion.correctAnswer) {
                                optionClass += ` ${styles.correct}`;
                            } else if (option === selectedAnswer && option !== currentQuestion.correctAnswer) {
                                optionClass += ` ${styles.incorrect}`;
                            } else {
                                optionClass += ` ${styles.disabled}`;
                            }
                        }

                        return (
                            <button key={index} className={optionClass} onClick={() => selectAnswer(option)} disabled={answered}>
                                <span className={styles.optionLetter}>{String.fromCharCode(65 + index)}</span>
                                <span className={styles.optionText}>{option}()</span>
                            </button>
                        );
                    })}
                </div>

                {showResult && (
                    <div className={styles.result}>
                        {selectedAnswer === currentQuestion.correctAnswer ? (
                            <div className={styles.correctResult}>
                                <span className={styles.emoji}>üéâ</span>
                                <span>–ü—Ä–∞–≤–∏–ª—å–Ω–æ!</span>
                            </div>
                        ) : (
                            <div className={styles.incorrectResult}>
                                <span className={styles.emoji}>‚ùå</span>
                                <span>
                                    –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: <strong>{currentQuestion.correctAnswer}()</strong>
                                </span>
                            </div>
                        )}

                        <button onClick={nextQuestion} className={styles.nextButton}>
                            {gameEnded ? '–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É' : '–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å'}
                        </button>
                    </div>
                )}
            </div>

            <div className={styles.gameFooter}>
                <div className={styles.score}>
                    –°—á—ë—Ç: {score} / {totalQuestions}
                </div>
                <button onClick={resetGame} className={styles.resetButton}>
                    –ó–∞–Ω–æ–≤–æ
                </button>
            </div>
        </div>
    );
};
